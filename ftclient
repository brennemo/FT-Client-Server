#!/usr/bin/python

# Morgan Brenner
# brennemo@oregonstate.edu 
# CS 372 Program 2

import signal 
import socket
import os, sys

def initiateContact(argv):
	HOST = argv[1]
	PORT = int(argv[2])   
	s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
	s.connect((HOST, PORT))
	return s

def startUp(port):
    """
    Returns: socket file descriptor for data connection 
    """   
    q = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    
    q.bind(('', port))
    q.listen(1)                #allow 1 connection at a time 
    return q 

def makeRequest(s, argv): 
	if argv[3] == '-l':
		cmd = ' '.join(argv[3:len(argv)])[1:]	#join args with spaces, trim '-' from option
		print cmd
		s.send(cmd)

		q = startUp(int(argv[4]))		#wait for file list 

		conn, addr = q.accept() 
		response = conn.recv(1024)

		print 'Receiving directory structure from ' + argv[1] + ':' + argv[2]
		print '\n' + response	#test print  

		conn.close() 

	elif argv[3] == '-g':
		cmd = ' '.join(argv[3:len(argv)])[1:]	#join args with spaces, trim '-' from option
		print cmd 
		s.send(cmd)

		#HANDLE FILE NOT FOUND 

		q = startUp(int(argv[5]))		#wait for files

		conn, addr = q.accept() 
		receiveFile(conn, argv)

		conn.close() 

	return 


def receiveFile(conn, argv): 
	print 'Receiving ' + '\"' + argv[4] + '\" from ' + argv[1] + ':' + argv[2]

	#handle duplicate file names
	"""
	if isDuplicateFile(argv[4]):
		print 'duplicate file name'
		return 
	else:
	"""
		#createFile(argv[4], response)
		#f = open(fileName, 'w+')
	f = open('testtransferlongest.txt', 'w+')

	response = ''
	count = 0
	while '@@' not in response:
		f.write(response)
		print response
		count += 1
		response = ''
		response = conn.recv(1000)
		if '@@' in response:
			print 'end!'
		#print response	#test print  
	print 'count = ' + str(count)
	print 'transfer complete'
	f.close()
	return 

def isDuplicateFile(fileName):
	dir = os.listdir('.')
	return fileName in dir

if __name__ == "__main__":	
	#validate command line parameters 
	"""
	if len(sys.argv) < 5:
		print "USAGE: ./chatserve <port #>"
		exit(1)
	"""

	#establish TCP control connection on <SERVER_PORT>, i.e., connection P
	s = initiateContact(sys.argv)
	makeRequest(s, sys.argv)
	
	s.close()
	#print 'Received', repr(response)
	

