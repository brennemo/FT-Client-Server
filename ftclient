#!/usr/bin/python

# Morgan Brenner
# brennemo@oregonstate.edu 
# CS 372 Program 2

import signal 
import socket
import sys

def start_up(port):
    """
    Returns: socket file descriptor 
    """   
    q = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    
    q.bind(('', port))
    q.listen(1)                #allow 1 connection at a time 
    return q 

if __name__ == "__main__":
	#https://docs.python.org/2/library/socket.html

	#start on host B 
	
	#validate command line parameters 
	"""
	if len(sys.argv) < 5:
		print "USAGE: ./chatserve <port #>"
		exit(1)
	"""

	#establish TCP control connection on <SERVER_PORT>, i.e., connection P
	
	HOST = sys.argv[1]
	PORT = int(sys.argv[2])   
	s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
	s.connect((HOST, PORT))
	
	
	#send command (-l (list) or -g <FILENAME> (get)) on connection P 
	if sys.argv[3] == '-l':
		cmd = ' '.join(sys.argv[3:len(sys.argv)])[1:]	#join args with spaces, trim '-' from option
		print cmd
		s.send(cmd)

		q = start_up(int(sys.argv[4]))		#wait for file list 

		conn, addr = q.accept() 
		response = conn.recv(1024)

		conn.close() 

	elif sys.argv[3] == '-g':
		cmd = ' '.join(sys.argv[3:len(sys.argv)])[1:]	#join args with spaces, trim '-' from option
		print cmd 
		s.send(cmd)

		q = start_up(int(sys.argv[5]))		#wait for files

		conn, addr = q.accept() 
		response = conn.recv(1024)

		conn.close() 
	#invalid command: display error message from connection P

	#valid command: TCP data connection with ftserver on <DATA_PORT>, i.e., connection Q 

			#receive error message on connection P and display 
			#save file received on connection Q in current default directory 
				#handle duplicate file names
				#display 'transfer complete' message 
	
	#receive response 
	response = s.recv(1024)

	s.close()
	print 'Received', repr(response)
	

